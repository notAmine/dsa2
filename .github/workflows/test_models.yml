name: test_models

###  https://github.com/arita37/awesome-actions#static-analysis

on:
  push:
    branches:
      - main
      - multi


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
   
    - name: Set up Python 3.6.*
      uses: actions/setup-python@v1
      with:
        python-version: 3.6.*
      
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
      

    ##### Log Start  ######################################################
    #- name: ssh_gen
    #  uses: webfactory/ssh-agent@v0.2.0
      #with:
      #  ssh-private-key: ${{ secrets.GIT_RSA }}
                
    - name: log_start
      run: |
           ls .
           # cd /home/runner/work/mlmodels/  && git clone git@github.com:arita37/mlmodels_store.git  &&  ls && pwd
           # cd /home/runner/work/mlmodels/mlmodels/

    ########################################################################
    # - name: log_start
    #  run: |
    #       cd /home/runner/work/mlmodels/  && git clone git@github.com:arita37/mlmodels_store.git  &&  ls && pwd
    #       cd /home/runner/work/mlmodels/mlmodels/
            

    #- uses: actions/cache@v1
    #  id: cache
    #  with:
    #    path: ~/.cache/pip
    #    key: ${{ runner.os }}-pip-${{ hashFiles('**/install/requirements.txt') }}
    #    restore-keys: |
    #      ${{ runner.os }}-pip-
   


    - name: Cache pipenv virtualenv
      id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: /opt/hostedtoolcache/Python/
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/install/py36.txt') }}
          

    - name: Install numpy
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: pip install numpy==1.18.2   pillow==6.2.1  scipy
      

    - name: Install repo requirements  1
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
           pip install -r   install/py36.txt
           pip install pyod==0.8.5

    - name: Install repo requirements   2
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run:  |
        ls .
        #pip install -r install/requirements_fake.txt
        
    - name: Install rectorch from dev branch
      run: |
        git clone -b dev https://github.com/makgyver/rectorch.git
        cd rectorch
        pip3 install -r requirements.txt
        python setup.py install
    #- name: Install repo
    #  run: pip install -e . -r install/py36.txt  --no-deps

    # - name: log_start
    #  run: ml_test --do log_remote_start

    - name: test_import
      run: |
           python -c "import core_run;   print(core_run)"
           python -c "import os, numpy ; print(os)"
           conda list
           pip list
           # python -c "import tensorflow, torch ; print(tensorflow); print(torch)"

    ########  Test running 
    #- name: run_models
    #  run: chmod -R 777 . && ztest/run_models.sh   # 2>&1 | tee   /home/runner/work/mlmodels/mlmodels_store/log_import/log_optim.py


    ########### Keras TF 2.4 #############################################################################
    - name: python keras_widedeep.py  test
      # continue-on-error: true
      run:  |
            cd source/models && ipython keras_widedeep.py  test
            echo "keras_widedeep.py" >> file_check.txt
      ## ipython keras_widedeep.py  test2


    - name: python keras_widedeep_dense.py  test
      # continue-on-error: true
      run:  |
            cd source/models && ipython keras_widedeep_dense.py  test
            echo "keras_widedeep_dense.py" >> file_check.txt


    - name: python model_vaemdn.py test
      # continue-on-error: true
      run:  cd source/models && ipython model_vaemdn.py test2



    ########### SKlearn type #########################################################################
    - name: python model_gefs.py test
      continue-on-error: true
      run:  cd source/models && ipython model_gefs.py test   && echo "model_gefs.py" >> file_check.txt


    - name: python model_sklearn.py test
      # continue-on-error: true
      run:  cd source/models && ipython model_sklearn.py test


    - name: python model_tseries.py test
      continue-on-error: true
      run:  cd source/models && ipython model_tseries.py test



    ########### Pytorch #############################################################################
    - name: python model_bayesian_numpyro.py test
      continue-on-error: true
      run:  cd source/models && ipython model_bayesian_pyro.py test  && echo "model_bayesian_pyro.py" >> file_check.txt


    - name: python model_bayesian_pyro.py test
      # continue-on-error: true
      run:  cd source/models && ipython model_bayesian_pyro.py test && echo "model_bayesian_pyro.py" >> file_check.txt


    - name: python torch_rvae.py test 
      # continue-on-error: true
      run:  |
            cd source/models && ipython torch_rvae.py test
      ## ipython torch_rvae.py test


    - name: python torch_tabular.py test
      # continue-on-error: true
      run:  cd source/models && ipython torch_tabular.py test


    - name: python optuna_lightgbm.py test
      # continue-on-error: true
      run:  cd source/models && ipython optuna_lightgbm.py test


    #- name: python model_sampler.py test
    #  continue-on-error: true
    #  run:  cd source/models && ipython model_sampler.py test

    # - name: python model_encoder.py test
    #  continue-on-error: true
    #  run:  cd source/models && ipython model_encoder.py test


    #################################################################################################
    - name: Install rectorch from dev branch
      run: |
        cd source/models/repo && git clone -b dev https://github.com/makgyver/rectorch.git
        cd rectorch
        pip3 install -r requirements.txt
        python setup.py install

    - name: python torch_ease.py test
      # continue-on-error: true
      run: cd source/models && ipython torch_ease.py test


    - name: python torch_rectorch.py test
      # continue-on-error: true
      run: cd source/models && ipython torch_rectorch.py test





    ########### Keras TF 1.5 #############################################################################
    - name: pip3 install tensorflow==1.4.1  keras==2.3.1
      run: |
        python3 -m pip uninstall tensorflow  keras -y
        python3 -m pip install tensorflow==1.4.1  keras==2.3.1  --upgrade  --force-reinstall
        python -c "import tensorflow as tf;print(tf) "

    - name: python model_vaem.py test
      continue-on-error: true
      run:  cd source/models && ipython model_vaem.py test








    #- name: ml_test_function
    #  run: ml_test --do test_functions    2>&1 | tee  cd /home/runner/work/mlmodels/mlmodels_store/log_import/log_functions.py




    #- name: ml_test
    #  run: ml_test



    #- name: log_gitcommit
    #  run: |
    #       ml_test --do log_remote_push --name test_fast_linux

# https://ianwhitestone.work/AWS-Serverless-Deployments-With-Github-Actions/
#
#
#
#
