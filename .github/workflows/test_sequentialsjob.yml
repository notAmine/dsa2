name: Python Github Actions

on:
  push:
    branches:
      - run_train
      - benchmark


jobs:
  setup: # First Job Executes
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false #if one of the jobs in the matrix expansion fails, the rest of the jobs will be cancelled. Helpful fo debugging
      matrix:
        os : [ubuntu-latest, windows-latest , macOS-latest] #mutiple os setup
        include:  # used for cache pip 
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache
        python-version: [3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-   
          ${{ runner.os }}-
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    

  lint: # Second job
      needs: setup  # setup-job must complete successfully before lint-job begins
      runs-on: ubuntu-latest
      steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
      if: always()
      needs : [setup,lint] # test-job waits for both setup-job and lint-job to complete.
      runs-on: ubuntu-latest
      continue-on-error: true # Continue on even error occured in this build
      steps:

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with pytest
        run: |
          pytest

      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Analysing the code with pylint
        run: |
          pylint `ls -R|grep .py$|xargs`


      - uses: nashmaniac/create-issue-action@v1.1
        if: ${{ failure() }} # only run when this job is failed.
        name: Create Issue Action
        with:
          title: Automated issue for Linter Failed ${{ github.sha }}
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: refactoring-needed, build-failed 
          body: Workflow failed for commit ${{github.sha}} This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**